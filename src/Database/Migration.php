<?php

declare(strict_types=1);

namespace App\Database;

use PDO;
use PDOException;

class Migration
{
    private PDO $pdo;
    private string $migrationsPath;

    public function __construct(PDO $pdo, string $migrationsPath)
    {
        $this->pdo = $pdo;
        $this->migrationsPath = $migrationsPath;
    }

    /**
     * –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –º–∏–≥—Ä–∞—Ü–∏–π
     */
    public function migrate(): void
    {
        echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏...\n";

        $this->createMigrationsTable();
        $migrations = $this->getMigrationsToRun();

        if (empty($migrations)) {
            echo "‚úÖ –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!\n";
            return;
        }

        foreach ($migrations as $migration) {
            $this->runMigration($migration);
        }

        echo "üéâ –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!\n";
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
     */
    private function createMigrationsTable(): void
    {
        $sql = "
            CREATE TABLE IF NOT EXISTS migrations (
                id SERIAL PRIMARY KEY,
                migration_name VARCHAR(255) UNIQUE NOT NULL,
                applied_at TIMESTAMPTZ DEFAULT NOW()
            )
        ";

        $this->pdo->exec($sql);
        echo "üìã –¢–∞–±–ª–∏—Ü–∞ migrations –≥–æ—Ç–æ–≤–∞\n";
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
     */
    private function getMigrationsToRun(): array
    {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π
        $allMigrations = glob($this->migrationsPath . '/*.sql');
        sort($allMigrations);

        // –ü–æ–ª—É—á–∞–µ–º —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
        $stmt = $this->pdo->query("SELECT migration_name FROM migrations ORDER BY migration_name");
        $appliedMigrations = $stmt->fetchAll(PDO::FETCH_COLUMN);

        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
        $migrationsToRun = [];
        foreach ($allMigrations as $migrationFile) {
            $migrationName = basename($migrationFile);
            if (!in_array($migrationName, $appliedMigrations)) {
                $migrationsToRun[] = $migrationFile;
            }
        }

        return $migrationsToRun;
    }

    /**
     * –í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–¥–Ω—É –º–∏–≥—Ä–∞—Ü–∏—é
     */
    private function runMigration(string $migrationFile): void
    {
        $migrationName = basename($migrationFile);
        echo "‚ö° –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é: {$migrationName}... ";

        try {
            $this->pdo->beginTransaction();

            // –ß–∏—Ç–∞–µ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º SQL —Ñ–∞–π–ª
            $sql = file_get_contents($migrationFile);
            $this->pdo->exec($sql);

            // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É migrations
            $stmt = $this->pdo->prepare("INSERT INTO migrations (migration_name) VALUES (?)");
            $stmt->execute([$migrationName]);

            $this->pdo->commit();
            echo "‚úÖ\n";

        } catch (PDOException $e) {
            $this->pdo->rollBack();
            echo "‚ùå\n";
            throw new \RuntimeException("–û—à–∏–±–∫–∞ –≤ –º–∏–≥—Ä–∞—Ü–∏–∏ {$migrationName}: " . $e->getMessage());
        }
    }

    /**
     * –û—Ç–∫–∞—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –º–∏–≥—Ä–∞—Ü–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
     */
    public function rollback(): void
    {
        echo "‚ö†Ô∏è  –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω. –°–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ –≤—Ä—É—á–Ω—É—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ.\n";
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—Ç–∫–∞—Ç–∞, –µ—Å–ª–∏ —Å–æ–∑–¥–∞—Ç—å down-–º–∏–≥—Ä–∞—Ü–∏–∏
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
     */
    public function status(): void
    {
        $this->createMigrationsTable();

        $allMigrations = glob($this->migrationsPath . '/*.sql');
        sort($allMigrations);

        $stmt = $this->pdo->query("SELECT migration_name, applied_at FROM migrations ORDER BY migration_name");
        $appliedMigrations = [];
        while ($row = $stmt->fetch()) {
            $appliedMigrations[$row['migration_name']] = $row['applied_at'];
        }

        echo "üìä –°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π:\n";
        echo str_repeat('-', 80) . "\n";

        foreach ($allMigrations as $migrationFile) {
            $migrationName = basename($migrationFile);
            $status = isset($appliedMigrations[$migrationName]) ? '‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω–∞' : '‚è≥ –û–∂–∏–¥–∞–µ—Ç';
            $date = isset($appliedMigrations[$migrationName]) ? $appliedMigrations[$migrationName] : '';

            printf("%-40s %-15s %s\n", $migrationName, $status, $date);
        }
    }
}
